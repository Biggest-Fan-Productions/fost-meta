#!/usr/bin/env bash
cd $(dirname $0)
set -ex

TAG=$(git describe --dirty)
UBUNTU=bionic

rm -rf dist build.tmp

function dockerize {
    sudo docker build --no-cache \
        --build-arg TAG=$TAG \
        --build-arg UBUNTU=$UBUNTU \
    sudo docker push fost/$1:$TAG
        --tag fost/$1:$TAG \
        --file $1.dockerfile .
}
function latest {
    sudo docker tag fost/$1:$TAG fost/$1:latest
    sudo docker push fost/$1:latest
}


sudo docker pull ubuntu:$UBUNTU
dockerize ubuntu; latest ubuntu
dockerize builder; latest builder
dockerize runtime; latest runtime

# Build software and leave in `dist` folder
sudo docker run -it --rm -u $(id -u):$(id -g) -w /src/ \
    -v $(pwd)/..:/src \
    fost/builder bash -c \
        "mkdir -p docker/build.tmp && \
            cd docker/build.tmp && \
            cmake -G Ninja \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INSTALL_PREFIX=../dist \
                /src/  && \
            ninja install/strip"

sudo docker build --no-cache \
        --build-arg TAG=$TAG \
sudo docker push fost/all:$TAG
        --file all.dockerfile \
        --tag fost/all:$TAG .

if git branch | grep "* master" > /dev/null
then {
    latest all
}
fi
