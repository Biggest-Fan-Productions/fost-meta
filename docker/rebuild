#!/usr/bin/env bash
SRC=$(pwd)/$(dirname $0)
cd $(dirname $0)

set -ex

# Ensure IP forwarding is enabled
sudo sysctl net.ipv4.ip_forward=1
# Set up port forwarding for 3242 to apt-cacher
IPRULE="PREROUTING -t nat -p tcp --dport 3142 -j DNAT --to-destination $(host apt-cacher | grep -o "[0-9]*.[0-9]*.[0-9]*.[0-9]*$"):3142"
sudo iptables -C $IPRULE || sudo iptables -A $IPRULE

function dockerize {
    if [ -a $1-$2 ]; then
        sudo docker build -t kayess/$1:$2 $1-$2
    else
        sed -i s/:latest/:$2/ $1/Dockerfile
        sudo docker build -t kayess/$1:$2 $1
    fi
    sudo docker push kayess/$1:$2
}

for RELEASE in precise trusty; do
    # Copy this lot into a temp folder so we can make changes
    DIR=$(mktemp -d)
    cp -r $SRC/* $DIR/
    cd $DIR

    # Make sure we have the latest source images
    sudo docker pull ubuntu:$RELEASE

    # Build the two base images
    for BUILD in ubuntu-updated fost-builder; do
        dockerize $BUILD $RELEASE
    done

    # Build minit.c for the minit container, then dockerize it
    sudo docker run -it --rm=true \
            -v $(pwd)/minit:/src \
            kayess/fost-builder:$RELEASE \
        gcc -O2 -o minit minit.c
    dockerize minit $RELEASE
    # Build minit.c for the minit-restart container, then dockerize it
    cp minit/minit.c minit-restart/
    sudo docker run -it --rm=true \
            -v $(pwd)/minit-restart:/src \
            kayess/fost-builder:$RELEASE \
        gcc -DRESTART -O2 -o minit minit.c
    dockerize minit-restart $RELEASE

    # Build additional images
    for BUILD in fost-runtime; do
        dockerize $BUILD $RELEASE
    done

    rm -rf $DIR
done

for IMAGE in ubuntu-updated fost-builder minit minit-restart fost-runtime; do
    sudo docker tag kayess/$IMAGE:$RELEASE kayess/$IMAGE:latest
    sudo docker push kayess/$IMAGE:latest
done
